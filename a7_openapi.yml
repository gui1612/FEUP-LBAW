openapi: 3.0.0

info:
  version: "1.0.0"
  title: "Wrottit API"
  description: "Web Resources Specification (A7) for Wrottit"

servers:
  - url: http://lbaw2264.lbaw.fe.up.pt
    description: Production server

externalDocs:
  url: https://git.fe.up.pt/lbaw/lbaw2223/lbaw2264/-/wikis
  description: Wrottit documentation

tags:
  - name: "M01: Authentication"
  - name: "M02: Profile and User Information"
  - name: "M03: System Administration"
  - name: "M04: Forums, Posts and Comments"
  - name: "M05: Notifications"
  - name: "M06: Static Pages"

paths:
  # M01 - Authentication and User Profile
  /login:
    get:
      operationId: "R101"
      summary: "R101: Login Form"
      description: "Provide a form for authentication. Acess: PUB"
      tags:
        - "M01: Authentication" 
      
      responses:  
        "200": 
          description: "Ok. Show Administrators Listing UI02" 
      
    post:
      operationId: "R102"
      summary: "R102: Login Action"
      description: "Login form submission action. Acess: PUB"
      tags:
        - "M01: Authentication"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
    
      responses:
        "302":
          description: "Redirect after processing the login credentials."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful login. Redirect to homepage."
                  value: "/"
                302Failure:
                  description: "Failed login. Redirect to login form."
                  value: "/login"            
  
  /logout:
    get:
      operationId: R103
      summary: "R103: Logout Action"
      description: "Logout the current authenticated user. Access: USR"
      tags:
        - "M01: Authentication"

      responses:
        "302":
          description: "Redirect after processing logout."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful logout. Redirect to homepage."
                  value: "/"

  /register:
    get:
      operationId: R104
      summary: "R104: Register Form"
      description: "Provide form for new users. Access: PUB"
      tags:
        - "M01: Authentication"

      responses:
        "200":
          description: "Ok. Show register form"

    post:
      operationId: R105
      summary: "R105: Register action"
      description: "Processes the new user register form submission. Access: PUB"
      tags:
        - "M01: Authentication"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstName:  
                  type: string
                lastName: 
                  type: string
                bannerPicture:
                  type: string
                  format: binary
                profilePicture:
                  type: string
                  format: binary 
                bio:
                  type: string               
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - username
                - email
                - password
      
      responses:
        "302":
          description: "Redirect after processing the new user sign-up form."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful registration. Redirect to user profile."
                  value: "/users/{user}"
                302Failure:
                  description: "Failed registration. Redirect to sign-up form."
                  value: "/signup"

  /auth/{provider}/redirect:
    get:
      operationId: R106
      summary: "R106: OAuth API Sign-in"
      description: "Redirects the user to the authentication provider for authorization. Access: PUB"
      tags:
        - "M01: Authentication"
      
      responses:
        "200":
          description: "Ok. Redirects the user to the authentication provider"

  /auth/{provider}/callback:
    get:
      operationId: R107
      summary: "R107:  OAuth API callback"
      description: "Handles the callback from the authentication provider. Access: PUB"
      tags: 
        - "M01: Authentication"

      responses:
        "200":
          description: "Ok. The callback was successful"
        "401":
          description: "The callback was unsuccessful"

  /forgot_password:
    get:
      operationId: R108
      summary: "R108: Request Password Form"
      description: "Show form for user to request a password reset link. Access: PUB"
      tags: 
       - "M01: Authentication"

      responses:
        "200":
          description: "Ok. Show request password form"
        "422":
          description: "Unprocessable Entity"
    post:   
      operationId: R109
      summary: "R109: Request New Password"
      description: "Sends a password reset link to the specified email address. Access: USR"
      tags: 
        - "M01: Authentication"
      
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      
      responses:     
        "200":
          description: "OK. Indicates whether the request was successful"  
        "422":
          description: "Unprocessable Entity"          
  
  /reset:
    get:
      operationId: R110
      summary: "R110: Reset Password Form"
      description: "Show form for user to reset the password. Access: USR"
      tags: 
       - "M01: Authentication"

      responses:
        "200":
          description: "Ok. Show reset password form"
        "422":
          description: "Unprocessable Entity"
    post:   
      operationId: R111
      summary: "R111: Reset Password Request"
      description: "Sends a password reset request. Access: USR"
      tags: 
        - "M01: Authentication"
      
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      
      responses:     
        "200":
          description: "OK. Indicates whether the password request was successful"  
        "422":
          description: "Unprocessable Entity"
  
  /users/{user}:
    get:
      operationId: R201
      summary: "R201: View user profile"
      description: "Show the individual user profile. Access: PUB"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show user profile (UI07)"
        "404":
          description: "User does not exist"

    delete:
      operationId: R202
      summary: "R202: Deletes user profile"
      description: "Deletes specified user. Access: OWN"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show user profile (UI07)"
        "404":
          description: "User does not exist"      

  /users/{user}/edit:
    get:
      operationId: R203
      summary: "R203: User profile edition form"
      description: "Provide form for user profile edition. Access: OWN"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show user profile edition form (UI07)"
        "401":
          description: "Unauthorized. User must be authenticated"
        "403":
          description: "Forbidden. User must be owner of the profile"
        "404":
          description: "User not found"

    put:
      operationId: R204
      summary: "R204: Edit user profile action"
      description: "Processes the user edit profile submission. Access: OWN"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bannerPicture:
                  type: string
                  format: binary
                profilePicture:
                  type: string
                  format: binary 
                bio:
                  type: string               
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password  

      responses:
        "302":
          description: "Redirect after processing the user updated information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful profile edition. Redirect to user profile."
                  value: "/users/{user}"
                302Failure:
                  description: "Failed profile edition. Redirect to edit profile form."
                  value: "/users/{user}/edit"   

  /user/{user}/follow:
    post:
      operationId: R205
      summary: "R209: Follow user action"
      description: "Processes a request to follow another user. Access: USR"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"

  /user/{user}/unfollow:
    delete:
      operationId: R206
      summary: "R206: Unfollow user action"
      description: "Processes a request to unfollow another user. Access: USR"
      tags:
        - "M02: Profile and User Information"

      parameters:
        - in: path
          name: user
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"
        "409":
          description: "Conflict. User not followed"                

# aqui
  # M03 : SystemAdministration
  /admin/users:
    get:
      operationId: "R301"
      summary: "R301: View Administration Panel"
      description: "View users administration panel. Access: ADM"
      tags:
        - "M03: System Administration"

      responses:
        "200":
          description: "Ok. Show Users Administration Panel UI06"

  /admin/forums:
    get:
      operationId: "R302"
      summary: "R302: View Forums Administration Panel"
      description: "View forums administration panel. Access: ADM"
      tags:
        - "M03: System Administration"

      responses:
        "200":
          description: "Ok. Show Forums Administration"

  /admin/team:
    get:
      operationId: "R303"
      summary: "R303: Show Administration Team"
      description: "View all system administrators. Access: ADM"
      tags:
        - "M03: System Administration"

      responses:
        "200":
          description: "Ok. Show Administrators Listing UI"
    post:
      operationId: "R304"
      summary: "R304: Promote User to Admin"
      description: "Promote Regular User to Admin Action. Access: ADM"
      tags:
        - "M03: System Administration"

      responses:
        "200":
          description: "Ok. Show Administrators Listing UI"
        "422":
          description: "Validation error. The member was not added to the administration team."
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    enum:
                      - user:not-found

  /admin/team/{admin}:
    delete:
      operationId: "R305"
      summary: "R305: Remove Administrator API Route"
      description: "Remove user from the team of system administrators. Access: ADM"
      tags:
        - "M03: System Administration"

      parameters:
        - in: path
          name: username
          description: "The username of the user to remove from the team of system administrators."
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "Ok. Successfuly removed the member from the administration team."

        "422":
          description: "Validation error. The member was not removed from the administration team."
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    enum:
                      - user:not-found
  
  /admin/team/{user}: 
    post:
      operationId: "R304"
      summary: "R304: Adds Administrator API Route"
      description: "Adds user to the team of system administrators. Access: ADM"
      tags:
        - "M03: System Administration"

      parameters:
        - in: path
          name: user
          description: "The username of the user to added to the team of system administrators."
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "Ok. Successfuly added the member to the administration team."

        "422":
          description: "Validation error. The member was not added to the administration team."
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    enum:
                      - user:not-found                  

  /admin/team/{user}/block:
    post:
      operationId: "R305"
      summary: "R305: Block a user"
      description: "Administrators block for users. Access: ADM"
      tags:
        - "M03: System Administration"

      parameters:
        - in: path
          name: user
          description: "The user is blocked from the server by the team of system administrators."
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "Ok. Successfuly user block by administration team."

        "400":
          description: "Invalid Request. The user was not blocked by the administration team."
    delete:
      operationId: "R306"
      summary: "R306: Unblock a user"
      description: "Administrators unblock the user that was blocked before. Access: ADM"
      tags:
        - "M03: System Administration"

      parameters:
        - in: path
          name: user
          description: "The user is blocked from the server by the team of system administrators."
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "Ok. Successfuly user block by administration team."

        "400":
          description: "Invalid Request. The user was not blocked by the administration team."

  /admin/reports:
    get:
      operationId: "R307"
      summary: "R307: View Reports Administration Panel"
      description: "View reports administration panel. Access: ADM"
      tags:
        - "M03: System Administration"

      responses:
        "200":
          description: "Ok. Show reports administration panel"
  
  /admin/reports/{report}:
    get:
      operationId: "R308"
      summary: "R308: View a Report"
      description: "View the specific report details like type and state. Access: ADM"
      tags:
        - "M03: System Administration"  

      responses:
        "200":
          description: "Ok. Show a specific report"

  /admin/reports/{report}/ongoing:
    put:
      operationId: "R309"
      summary: "R309: Report ongoing state"
      description: "Administrators can mark the report as on going. Access: ADM"
      tags:
        - "M03: System Administration" 

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum: ['ongoing']
      
      parameters:
        - name: report
          in: path
          required: true
          schema:
            type: string
            description: "The report to approve"
    
      responses:
        '200':
          description: "Report marked as ongoing"
        '400':        
          description: "Invalid request"

  /admin/reports/{report}/approved:
    put:
      operationId: "R310"
      summary: "R310: Approve a report"
      description: "Administrators can aprove a report in order to apply Access: ADM"
      tags:
        - "M03: System Administration" 

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum: ['approved']
      
      parameters:
        - name: report
          in: path
          required: true
          schema:
            type: string
            description: "The report to approve"
    
      responses:
        '200':
          description: "Report approved successfully"
        '400':
          description: "Invalid request"

  /admin/reports/{report}/denied:
    put:
      operationId: "R311"
      summary: "R311: Denie a report"
      description: "Administrators can denie a report in order to apply Access: ADM"
      tags:
        - "M03: System Administration" 

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                state:
                  type: string
                  enum: ['denied']
      
      parameters:
        - name: report
          in: path
          required: true
          schema:
            type: string
            description: "The report to denie"
    
      responses:
        '200':
          description: "Report denied successfully"
        '400':
          description: "Invalid request"        

  #M04 : Forums, Posts and Comments
  /:
    get:
      operationId: "401"
      summary: "R401: View Homepage"
      description: "View feed of most popular or recent posts. Access: PUB"
      tags:
        - "M04: Forums, Posts and Comments"
      
      parameters:
        - in: query
          name: sort
          description: "Posts ordering"
          schema:
            enum:
              - popular
              - recent

      responses:
        "200":
          description: "Ok. Show Homepage UI01"
  
  /forums/{forum}/posts:
    get:
      operationId: R402
      summary: "R402 : Create post form"
      description: "Provide new post creation form. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      responses:
        '200':
          description: "Ok. Show Create Post Form (UI17)"
        '302':
          description: "Redirect after trying to get Create Post Form"
    post:
      operationId: R403
      summary: "R403 : Create post on forum action"
      description: "Processes the new post creation form. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: string
                  format: binary
                body:
                  type: string
                caption:
                  type: string
              required:
                - title
                - body

      responses:
        "302":
          description: "Redirect after processing the create post form."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful post creation. Redirect to the post created."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed post creation. Redirect to Create Post form."
                  value: "/forums/{forum}/posts/new"
  /posts/{post}:
    get:
      operationId: R404
      summary: "R404 : View Post Page"
      description: "View an Post Page. Access: PUB"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "OK. Show Post Page"
        "404":
          description: "Post not found"
    
    put:
      operationId: R405
      summary: "R405 : Edit post action"
      description: "Processes the user edit post form submission. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: string
                  format: binary
                body:
                  type: string
                caption:
                  type: string
              required:
                - title
                - body

      responses:
        "302":
          description: "Redirect after processing the edit post action."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful post edition. Redirect to the post edited."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed post edition. Redirect to Post edition form."
                  value: "posts/{post}/edit"      
  
  /posts/{post}/edit:
    get:
      operationId: R406
      summary: "R406: Post Edition Form"
      description: "Provide form for post edition. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show post edition form"
        "401":
          description: "Unauthorized. Must be authenticated"
        "403":
          description: "Forbidden. Must be owner of the post"
        "404":
          description: "Post not found"

  /posts/{post}/comments:
    post:
      operationId: R407
      summary: "R407 : Comment on Post action"
      description: "Processes the new comments on posts. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: string
              properties:
                caption:
                  type: string
              required:
                - comment

      responses:
        "302":
          description: "Redirect after processing the comment on a post."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful comment creation. Redirect to the post."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed comment creation. Redirect to the post."
                  value: "/posts/{post}"

  /posts/{post}/comments/{comment}:
    put:
      operationId: R408
      summary: "R408 : Edit comment on post action"
      description: "Processes the comment edition on post form submission. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true
        - in: path
          name: comment
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: string
              properties:
                caption:
                  type: string
              required:
                - comment

      responses:
        "302":
          description: "Redirect after processing the comment edition on a post."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful comment edition. Redirect to the post."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed comment edition. Redirect to the post."
                  value: "/posts/{post}"
    delete:
      operationId: R409
      summary: "R409: Delete comment on post action"
      description: "Processes a request to delete comment on a post. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true
        - in: path
          name: comment
          schema:
            type: string
          required: true

      responses:
        "302":
          description: "Redirect after processing the comment deletion on a post."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful comment deletion. Redirect to the post."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed comment deletion. Redirect to the post."
                  value: "/posts/{post}" 

  /api/comments/{comment}/rating:
    get:
      operationId: R410
      summary: "R410 : Show Comment Rating"
      description: "Provide the rating from the comment. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: comment
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "OK. Show comment rating"
        "404":
          description: "Comment not found"
    post:
      operationId: R411
      summary: "R411 : Save Comment Rating Action"
      description: "Save Commnet Rating Action. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: comment
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "OK. Comment rating saved"
        "404":
          description: "Comment not found"
    
    delete:
      operationId: R412
      summary: "R412 : Remove Comment Rating Action"
      description: "Remove Comment Rating Action. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK. Successfully removed the comment rating"
        "404":
          description: "Comment not found"     

  /posts/{post}/images:
    post:
      operationId: R413
      summary: "R413 : Add Post Image Action"
      description: "Processes a request to add a image to the post. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"
      parameters:
        - in: path
          name: post
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "OK. Successfully added an image to the post"
        "401":
          description: "Unauthorized. Must be authenticated."
        "403":
          description: "Unauthorized. Must be the owner of the post"
        "404":
          description: "Post not found"

  /posts/{post}/images/{image}:
    delete:
      operationId: R414
      summary: "R414: Remove image from post action"
      description: "Processes a request to remove the image on a post. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true
        - in: path
          name: comment
          schema:
            type: string
          required: true

      responses:
        "302":
          description: "Redirect after processing the image deletion on a post."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful image deletion. Redirect to the post."
                  value: "/posts/{post}"
                302Failure:
                  description: "Failed comment deletion. Redirect to the post."
                  value: "/posts/{post}/edit"  

  /api/comments/{post}/rating:
    get:
      operationId: R410
      summary: "R410 : Show Post Rating"
      description: "Provide the rating from the post. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "OK. Show post rating"
        "404":
          description: "Post not found"
    post:
      operationId: R411
      summary: "R411 : Save Post Rating Action"
      description: "Save Post Rating Action. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: comment
          required: true
          schema:
            type: string

      responses:
        "200":
          description: "OK. Post rating saved"
        "404":
          description: "Post not found"
    
    delete:
      operationId: R412
      summary: "R412 : Remove Post Rating Action"
      description: "Remove Post Rating Action. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK. Successfully removed the post rating"
        "404":
          description: "Post not found"   

  /posts/{post}/report:
    post:
      operationId: R413
      summary: "R413: Report Post Action"
      description: "Processes a report made on a post. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ['post']
                reason:
                  type: string
              required:
                - reason

      responses:
        "200":
          description: "Successful post report"
        "400":
          description: "Failed to report post. Bad request"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"
  
  /posts/{post}/comments/{comment}/report:
    post:
      operationId: R414
      summary: "R414: Report Comment on Post Action"
      description: "Processes a report made on a post comment. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: post
          schema:
            type: string
          required: true
        - in: path
          name: comment
          schema:
            type: string
          required: true  

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ['comment']
                reason:
                  type: string
              required:
                - reason

      responses:
        "200":
          description: "Successful comment report"
        "400":
          description: "Failed to report comment. Bad request"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"

  /forums/{forum}/report:
    post:
      operationId: R415
      summary: "R415: Report Post Action"
      description: "Processes a report made on a forum. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ['forum']
                reason:
                  type: string
              required:
                - reason

      responses:
        "200":
          description: "Successful forum report"
        "400":
          description: "Failed to report forum. Bad request"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "Forum not found"

  /forums/{forum}/follow:
    post:
      operationId: R416
      summary: "R416: Follow forum action"
      description: "Processes a request to follow another forum. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "Forum not found"

  /forums/{forum}/unfollow:
    delete:
      operationId: R417
      summary: "R417: Unfollow forum action"
      description: "Processes a request to unfollow another forum. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Success"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "Forum not found"
        "409":
          description: "Conflict. Forum not followed"      

  /forums/{forum}/management:
    get:
      operationId: R418
      summary: "R418: View forum management page"
      description: "Show the forum management page. Access: PUB"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show forum management page"
        "404":
          description: "Forum management page does not exist"
    put:
      operationId: R418
      summary: "R418: Edit forum action"
      description: "Processes the forum edit submission. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bannerPicture:
                  type: string
                  format: binary
                forumPicture:
                  type: string
                  format: binary 
                description:
                  type: string               
                name:
                  type: string

      responses:
        "302":
          description: "Redirect after processing the forum updated information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful forum edition. Redirect to forum profile."
                  value: "/forums/{forum}"
                302Failure:
                  description: "Failed forum edition. Redirect to edit forum form."
                  value: "/forums/{forum}/management"

  /forums:
    post:
      operationId: R419
      summary: "R419 : Create forum action"
      description: "Processes the new forum creation form. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                bannerPicture:
                  type: string
                  format: binary
                forumPicture:
                  type: string
                  format: binary 
                description:
                  type: string
              required:
                - name
                - description

      responses:
        "302":
          description: "Redirect after processing the create forum form."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful forum creation. Redirect to the forum created."
                  value: "/forums/{forum}"
                302Failure:
                  description: "Failed forum creation. Redirect to Create Forum form."
                  value: "/forums/{forum}/new"


  /forums/new:
    get:
      operationId: R420
      summary: "R420 : Create forum form"
      description: "Provide new forum creation form. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      responses:
        200:
          description: 'Ok. Show Create Forum Form'
        302:
          description: 'Redirect after trying to get Create Forum Form'
          headers:
            Location:
              schema:
                type: string  
              examples:
                302Failure:
                  description: 'You are not logged in. Failed forum creation. Redirect to login Page.'
                  value: '/login'

  /forums/{forum}:
    get:
      operationId: R421
      summary: "R421: View forum page"
      description: "Show the forum page. Access: PUB"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Ok. Show forum"
        "404":
          description: "Forum does not exist"

  /forums/{forum}/delete:
    delete: 
      operationId: R422
      summary: "R422 : Delete forum action"
      description: "Processes a request to delete a forum. Access: OWN, ADM"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: integer
          required: true

      responses:
        "302":
          description: "Redirect after deleting forum."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful forum deletion. Redirect to homepage."
                  value: "/"
                302Failure:
                  description: "Failed to delete forum post. Redirect to post page"
                  value: "/forum/{forum}"

  /forums/{forum}/promote/{user}:
    post:
      operationId: R423
      summary: "R423: Promote User inside of a Forum Action"
      description: "Processes a User promotion to owner on a specific forum. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true
        - in: path
          name: user
          schema:
            type: string
          required: true  

      responses:
        "200":
          description: "Successful user promotion"
        "400":
          description: "Failed to user promotion. Bad request"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"

  /forums/{forum}/demote/{user}:
    post:
      operationId: R424
      summary: "R424: Demote User inside of a Forum Action"
      description: "Processes a User demotion to owner on a specific forum. Access: OWN"
      tags:
        - "M04: Forums, Posts and Comments"

      parameters:
        - in: path
          name: forum
          schema:
            type: string
          required: true
        - in: path
          name: user
          schema:
            type: string
          required: true  

      responses:
        "200":
          description: "Successful user demotion"
        "400":
          description: "Failed to user demotion. Bad request"
        "401":
          description: "Unauthorized. Must be authenticated"
        "404":
          description: "User not found"

  /search:
     get:
      operationId: R425
      summary: "R425: View search results"
      description: "Show search results. Access: USR"
      tags:
        - "M04: Forums, Posts and Comments"

      responses:
        "200":
          description: "Ok. Show search results"
        "401":
          description: "Unauthorized. Not logged in"
      
            

  # M05 - Notifications
  /notifications:
    get:
      operationId: R501
      summary: "R501: View Notifications"
      description: "Show user notifications. Access: USR"
      tags:
        - "M05: Notifications"

      responses:
        "200":
          description: "Ok. Show Notifications"
        "401":
          description: "Unauthorized. Not logged in"
  
  /notifications/{notification}:
    get:
      operationId: "R502"
      summary: "R502: View a Notification"
      description: "View the specific notification details. Access: USR"
      tags:
        - "M05: Notifications"  

      responses:
        "200":
          description: "Ok. Show a specific notification"    

    post: 
      operationId: "R503"
      summary: "R503: Mark Notification as Read"
      description: "Users can mark the notification as read. Acesses: USR"
      tags:
        - "M05: Notifications"

      parameters:
        - in: path
          name: notification
          required: true
          schema:
            type: string
    
      responses:
        '200':
          description: "Notification marked as read"
        '400':        
          description: "Invalid request" 
  
  /api/notifications/navbar:
    get:
      operationId: "R504"
      summary: "R504: Notifications information"
      description: "Provides information about the user notifications. Access: USR"
      tags:
        - "M05: Notifications"

      responses:
        "200":
          description: "Success."
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  created_at:
                    type: string
                    format: date
                example:
                  reason: "The user started following you!"
                  created_at: "04-03"
        "401":
          description: "Unauthorized. Must be authenticated"
        "403":
          description: "Forbidden. Must be owner of the account or administrator"
        "404":
          description: "User not found"
        "409":
          description: "User not suspended"

  # M06: Static Pages

  /about:
    get:
      operationId: "R601"
      summary: "R601: About Page"
      description: "Page with information about application and its developers. Access: PUB"
      tags:
        - "M06: Static Pages"

      responses:
        "200":
          description: "Ok. Show About Page"

  /features:
    get:
      operationId: "R602"
      summary: "R602: Features Page"
      description: "Page with the main features of the application. Access: PUB"
      tags:
        - "M06: Static Pages"

      responses:
        "200":
          description: "Ok. Show Main Features Page"

  /contact:
    get:
      operationId: "R603"
      summary: "R603: Contacts Page"
      description: "Application managers contact page. Access: PUB"
      tags:
        - "M06: Static Pages"

      responses:
        "200":
          description: "Ok. Show Contacts Page "
  
   

  